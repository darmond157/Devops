version: '3.8'

volumes:
  elasticsearch_data:
    name: elasticsearch_data

networks:
  elk_net:

services:
  elasticsearch:
    image: elasticsearch:7.17.13
    container_name: elasticsearch
    restart: always
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
      ELASTIC_USERNAME: admin
      ELASTIC_PASSWORD: admin
      node.name: elasticsearch
      network.host: 0.0.0.0
      http.port: 9200
      cluster.name: docker-cluster
      discovery.type: single-node
      bootstrap.memory_lock: "true"
      http.cors.enabled: "true"
      xpack.security.authc.api_key.enabled: "true"
      xpack.license.self_generated.type: basic
      xpack.security.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elk_net
  kibana:
    image: kibana:7.17.13
    container_name: kibana
    restart: always
    environment:
      - "SERVERNAME=kibana"
      - "ELASTICSEARCH_HOSTNAME=elasticsearch"
      - "ELASTICSEARCH_USERNAME=admin"
      - "ELASTICSEARCH_PASSWORD=admin"
      - "KIBANA_PUBLIC_URL=kibana"
      - "MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED=true"
      - "XPACK_FLEET_ENABLED=true"
      - "XPACK_FLEET_AGENTS_ENABLED=true"
      - "XPACK_FLEET_AGENTS_ELASTICSEARCH_HOST=elasticsearch"
      - "XPACK_FLEET_AGENTS_FLEET_SERVER_HOSTS=[\"http://fleet:8220\"]"
      - "XPACK_FLEET_AGENTS_TLSCHECKDISABLED=true"
    networks:
      - elk_net

  fleet:
    image: elastic/elastic-agent:7.17.13
    restart: always
    container_name: fleet
    environment:
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_USERNAME: admin
      ELASTICSEARCH_PASSWORD: admin
      FLEET_SERVER_ENABLE: true
      FLEET_SERVER_ELASTICSEARCH_HOST: elasticsearch
      FLEET_SERVER_INSECURE_HTTP: true
      KIBANA_FLEET_SETUP: true
      KIBANA_FLEET_HOST: kibana
      FLEET_SERVER_HOST: 0.0.0.0
      FLEET_SERVER_PORT: 8220
    networks:
      - elk_net

  elastic-agent:
    image: elastic/elastic-agent:7.17.13
    restart: always
    container_name: elastic-agent
    environment:
      FLEET_ENROLLMENT_TOKEN: "${FLEET_ENROLLMENT_TOKEN}"
      FLEET_ENROLL: 1
      FLEET_URL: "fleet"
    networks:
      - elk_net